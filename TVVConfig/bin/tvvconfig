#!/bin/bash

#### Load Virtual Environment ###
function activate_python_virutal_environment() {
VENV="venv/bin/activate"
if [ -f "${VENV}" ]; then
	source "${VENV}"
	echo ${VENV}
	return 0
fi
VENV="../${VENV}"
if [ -f "${VENV}" ]; then
	echo "${VENV}"
	return 0
fi
VENV="${HOME}/Development/tvvmia/venv/bin/activate"
if [ -f "${VENV}" ]; then
	echo "${VENV}"
	return 0
fi
VENV="${HOME}/Development/tvvmia/venv/bin/activate"
if [ -f "${VENV}" ]; then
	echo "${VENV}"
	return 0
fi
return -1
}
venv=`activate_python_virutal_environment`
rc=$?
if [ ${rc} -ne 0 ]; then
	echo "Cannot locate virtual environment. Ignoring..."
else
	echo "Loading virtual enviornment from: ${venv}"
fi
if [ "" == "${SECRETS}" ]; then
	SECRETS="/tvv/secrets/tvvmia.settings.json"
fi

#### Configure Environnment ###
secret() { # expects: $1 $2 -where $1 == section name, $2 == key name
SECRET_JSON=`jq .${1} $SECRETS`
JSON_VALUE=`echo $SECRET_JSON | jq .${2}`
echo $JSON_VALUE | tr -d \"
}

DEBUG="True"
HOST="localhost"
PORT=8080
USERNAME="username"
PASSWORD="password"
REGISTRY_HOST="localhost"
REGISTRY_PORT=9876
REGISTRY_USERNAME="username"
REGISTRY_PASSWORD="password"

### Process Args ###
while [ "" != "$*" ];
do
	case $1 in
		-s | -secrets | -S | -SECRETS )
			shift; if [ -f "$1" ]; then SECRETS="$1"; fi ;;
		-h | -help | --help )
			echo "Usage: $PROGNAME <-host hostname> <-port #####> <-username username> <-password password>"
			echo "		<-registry_host host> <-registry_port port> <-registry_username username> <-registry_password password>"
			exit ;;
		-host | -HOST ) shift; if [ "" != "$1" ]; then HOST="$1"; fi ;;
		-port | -PORT ) shift; if [ "" != "$1" ]; then PORT="$1"; fi ;;
		-username | -user | -USERNAME | -USER ) shift; if [ "" != "$1" ]; then USERNAME="$1"; fi ;;
		-password | -PASSWORD | -pass | -PASS ) shift; if [ "" != "$1" ]; then PASSWORD="$1"; fi ;;
		-registry_host | -REGISTRY_HOST ) shift; if [ "" != "$1" ]; then REGISTRY_HOST="$1"; fi ;;
		-registry_port | -REGISTRY_PORT ) shift; if [ "" != "$1" ]; then PORT="$1"; fi ;;
		-registry_username | -registry_user | -REGISTRY_USERNAME | -REGISTRY_USER ) shift; if [ "" != "$1" ]; then REGISTRY_USERNAME="$1"; fi ;;
		-registry_password | -REGISTRY_PASSWORD | -pregistry_pass | -REGISTRY_PASS ) shift; if [ "" != "$1" ]; then REGISTRY_PASSWORD="$1"; fi ;;
	esac
shift
done

export DEBUG
export HOST PORT USERNAME PASSWORD
export REGISTRY_HOST REGISTRY_PORT REGISTRY_USERNAME REGISTRY_PASSWORD

